name: Build and Publish to npm

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
          - os: macos-latest
            arch: x64
          - os: windows-latest
            arch: x64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          architecture: ${{ matrix.arch }}

      - name: Install Dependencies on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libpng-dev libpixman-1-dev librlottie-dev

      - name: Install Dependencies on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install libpng rlottie

      - name: Install Dependencies on Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install python --no-progress --limit-output
          choco source add --name=chocolatey --priority=10 --source="https://community.chocolatey.org/api/v2/"
          choco install rlottie --source chocolatey
          npm install -g node-gyp

      - name: Install npm Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Prebuild Binaries
        env:
          OPENSSL_FIPS: ""
        run: npm run prebuild

      - name: Upload Prebuilds
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ matrix.os }}-${{ matrix.arch }}
          path: prebuilds/

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install npm Dependencies
        run: npm install

      - name: Build TypeScript
        run: npm run build

      - name: Download Prebuilds
        uses: actions/download-artifact@v4
        with:
          path: prebuilds-all

      - name: Combine Prebuilds
        run: |
          mkdir -p prebuilds
          # Copy all uploaded prebuild artifacts regardless of OS
          find prebuilds-all -type d -exec cp -r {}/* prebuilds/ \;
          ls -l prebuilds/

      - name: Dry-run npm pack
        run: npm pack --dry-run

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}